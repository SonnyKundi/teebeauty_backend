# Generated by Django 4.2 on 2023-05-30 20:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tersun.common.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('providers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('category_name', models.CharField(max_length=300)),
                ('category_code', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('service_name', models.CharField(blank=True, max_length=300, null=True)),
                ('house_calls', models.BooleanField(default=False)),
                ('minimum_charge', models.DecimalField(decimal_places=2, default=0, max_digits=30, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.TextField()),
                ('billboard_image', models.FileField(upload_to=tersun.common.utils.get_directory)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='providers.provider')),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('county', models.CharField(max_length=300)),
                ('town_name', models.CharField(max_length=300)),
                ('town_code', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('sub_category_name', models.CharField(max_length=300)),
                ('sub_category_code', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider_services.category')),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceVideo',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('video', models.FileField(blank=True, null=True, upload_to=tersun.common.utils.get_directory)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider_services.service')),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTown',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider_services.service')),
                ('town', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='provider_services.town')),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceSubCategory',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider_services.service')),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider_services.subcategory')),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.FileField(blank=True, null=True, upload_to=tersun.common.utils.get_directory)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider_services.service')),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='service',
            name='sub_categories',
            field=models.ManyToManyField(through='provider_services.ServiceSubCategory', to='provider_services.subcategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='towns',
            field=models.ManyToManyField(through='provider_services.ServiceTown', to='provider_services.town'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_by', models.UUIDField()),
                ('updated_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField()),
                ('is_active', models.BooleanField(default=True)),
                ('rating', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provider_services.service')),
            ],
            options={
                'ordering': ('-updated_on', '-created_on'),
                'abstract': False,
            },
        ),
    ]
